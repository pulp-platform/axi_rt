// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package axi_rt_reg_pkg;

  // Param list
  parameter int NumMrg = 8;
  parameter int NumSub = 2;
  parameter int NumReg = 16;

  // Address widths within the block
  parameter int BlockAw = 10;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_major_version_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_minor_version_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_patch_version_reg_t;

  typedef struct packed {
    logic        q;
  } axi_rt_reg2hw_rt_enable_mreg_t;

  typedef struct packed {
    logic [7:0]  q;
  } axi_rt_reg2hw_len_limit_mreg_t;

  typedef struct packed {
    logic        q;
  } axi_rt_reg2hw_imtu_enable_mreg_t;

  typedef struct packed {
    logic        q;
  } axi_rt_reg2hw_imtu_abort_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_start_addr_sub_low_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_start_addr_sub_high_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_end_addr_sub_low_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_end_addr_sub_high_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_write_budget_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_read_budget_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_write_period_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_read_period_mreg_t;

  typedef struct packed {
    logic [31:0] q;
  } axi_rt_reg2hw_max_num_managers_reg_t;

  typedef struct packed {
    logic        d;
  } axi_rt_hw2reg_rt_bypassed_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_write_budget_left_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_read_budget_left_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_write_period_left_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_read_period_left_mreg_t;

  typedef struct packed {
    logic        d;
  } axi_rt_hw2reg_isolate_mreg_t;

  typedef struct packed {
    logic        d;
  } axi_rt_hw2reg_isolated_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_num_managers_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_addr_width_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_data_width_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_id_width_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_user_width_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_num_pending_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_w_buffer_depth_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_num_addr_regions_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_period_width_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } axi_rt_hw2reg_budget_width_reg_t;

  // Register -> HW type
  typedef struct packed {
    axi_rt_reg2hw_major_version_reg_t major_version; // [4311:4280]
    axi_rt_reg2hw_minor_version_reg_t minor_version; // [4279:4248]
    axi_rt_reg2hw_patch_version_reg_t patch_version; // [4247:4216]
    axi_rt_reg2hw_rt_enable_mreg_t [7:0] rt_enable; // [4215:4208]
    axi_rt_reg2hw_len_limit_mreg_t [7:0] len_limit; // [4207:4144]
    axi_rt_reg2hw_imtu_enable_mreg_t [7:0] imtu_enable; // [4143:4136]
    axi_rt_reg2hw_imtu_abort_mreg_t [7:0] imtu_abort; // [4135:4128]
    axi_rt_reg2hw_start_addr_sub_low_mreg_t [15:0] start_addr_sub_low; // [4127:3616]
    axi_rt_reg2hw_start_addr_sub_high_mreg_t [15:0] start_addr_sub_high; // [3615:3104]
    axi_rt_reg2hw_end_addr_sub_low_mreg_t [15:0] end_addr_sub_low; // [3103:2592]
    axi_rt_reg2hw_end_addr_sub_high_mreg_t [15:0] end_addr_sub_high; // [2591:2080]
    axi_rt_reg2hw_write_budget_mreg_t [15:0] write_budget; // [2079:1568]
    axi_rt_reg2hw_read_budget_mreg_t [15:0] read_budget; // [1567:1056]
    axi_rt_reg2hw_write_period_mreg_t [15:0] write_period; // [1055:544]
    axi_rt_reg2hw_read_period_mreg_t [15:0] read_period; // [543:32]
    axi_rt_reg2hw_max_num_managers_reg_t max_num_managers; // [31:0]
  } axi_rt_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    axi_rt_hw2reg_rt_bypassed_mreg_t [7:0] rt_bypassed; // [2391:2384]
    axi_rt_hw2reg_write_budget_left_mreg_t [15:0] write_budget_left; // [2383:1872]
    axi_rt_hw2reg_read_budget_left_mreg_t [15:0] read_budget_left; // [1871:1360]
    axi_rt_hw2reg_write_period_left_mreg_t [15:0] write_period_left; // [1359:848]
    axi_rt_hw2reg_read_period_left_mreg_t [15:0] read_period_left; // [847:336]
    axi_rt_hw2reg_isolate_mreg_t [7:0] isolate; // [335:328]
    axi_rt_hw2reg_isolated_mreg_t [7:0] isolated; // [327:320]
    axi_rt_hw2reg_num_managers_reg_t num_managers; // [319:288]
    axi_rt_hw2reg_addr_width_reg_t addr_width; // [287:256]
    axi_rt_hw2reg_data_width_reg_t data_width; // [255:224]
    axi_rt_hw2reg_id_width_reg_t id_width; // [223:192]
    axi_rt_hw2reg_user_width_reg_t user_width; // [191:160]
    axi_rt_hw2reg_num_pending_reg_t num_pending; // [159:128]
    axi_rt_hw2reg_w_buffer_depth_reg_t w_buffer_depth; // [127:96]
    axi_rt_hw2reg_num_addr_regions_reg_t num_addr_regions; // [95:64]
    axi_rt_hw2reg_period_width_reg_t period_width; // [63:32]
    axi_rt_hw2reg_budget_width_reg_t budget_width; // [31:0]
  } axi_rt_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] AXI_RT_MAJOR_VERSION_OFFSET = 10'h 0;
  parameter logic [BlockAw-1:0] AXI_RT_MINOR_VERSION_OFFSET = 10'h 4;
  parameter logic [BlockAw-1:0] AXI_RT_PATCH_VERSION_OFFSET = 10'h 8;
  parameter logic [BlockAw-1:0] AXI_RT_RT_ENABLE_OFFSET = 10'h c;
  parameter logic [BlockAw-1:0] AXI_RT_RT_BYPASSED_OFFSET = 10'h 10;
  parameter logic [BlockAw-1:0] AXI_RT_LEN_LIMIT_0_OFFSET = 10'h 14;
  parameter logic [BlockAw-1:0] AXI_RT_LEN_LIMIT_1_OFFSET = 10'h 18;
  parameter logic [BlockAw-1:0] AXI_RT_IMTU_ENABLE_OFFSET = 10'h 1c;
  parameter logic [BlockAw-1:0] AXI_RT_IMTU_ABORT_OFFSET = 10'h 20;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_0_OFFSET = 10'h 24;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_1_OFFSET = 10'h 28;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_2_OFFSET = 10'h 2c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_3_OFFSET = 10'h 30;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_4_OFFSET = 10'h 34;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_5_OFFSET = 10'h 38;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_6_OFFSET = 10'h 3c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_7_OFFSET = 10'h 40;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_8_OFFSET = 10'h 44;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_9_OFFSET = 10'h 48;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_10_OFFSET = 10'h 4c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_11_OFFSET = 10'h 50;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_12_OFFSET = 10'h 54;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_13_OFFSET = 10'h 58;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_14_OFFSET = 10'h 5c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_LOW_15_OFFSET = 10'h 60;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_0_OFFSET = 10'h 64;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_1_OFFSET = 10'h 68;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_2_OFFSET = 10'h 6c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_3_OFFSET = 10'h 70;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_4_OFFSET = 10'h 74;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_5_OFFSET = 10'h 78;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_6_OFFSET = 10'h 7c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_7_OFFSET = 10'h 80;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_8_OFFSET = 10'h 84;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_9_OFFSET = 10'h 88;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_10_OFFSET = 10'h 8c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_11_OFFSET = 10'h 90;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_12_OFFSET = 10'h 94;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_13_OFFSET = 10'h 98;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_14_OFFSET = 10'h 9c;
  parameter logic [BlockAw-1:0] AXI_RT_START_ADDR_SUB_HIGH_15_OFFSET = 10'h a0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_0_OFFSET = 10'h a4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_1_OFFSET = 10'h a8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_2_OFFSET = 10'h ac;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_3_OFFSET = 10'h b0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_4_OFFSET = 10'h b4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_5_OFFSET = 10'h b8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_6_OFFSET = 10'h bc;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_7_OFFSET = 10'h c0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_8_OFFSET = 10'h c4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_9_OFFSET = 10'h c8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_10_OFFSET = 10'h cc;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_11_OFFSET = 10'h d0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_12_OFFSET = 10'h d4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_13_OFFSET = 10'h d8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_14_OFFSET = 10'h dc;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_LOW_15_OFFSET = 10'h e0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_0_OFFSET = 10'h e4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_1_OFFSET = 10'h e8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_2_OFFSET = 10'h ec;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_3_OFFSET = 10'h f0;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_4_OFFSET = 10'h f4;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_5_OFFSET = 10'h f8;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_6_OFFSET = 10'h fc;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_7_OFFSET = 10'h 100;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_8_OFFSET = 10'h 104;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_9_OFFSET = 10'h 108;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_10_OFFSET = 10'h 10c;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_11_OFFSET = 10'h 110;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_12_OFFSET = 10'h 114;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_13_OFFSET = 10'h 118;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_14_OFFSET = 10'h 11c;
  parameter logic [BlockAw-1:0] AXI_RT_END_ADDR_SUB_HIGH_15_OFFSET = 10'h 120;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_0_OFFSET = 10'h 124;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_1_OFFSET = 10'h 128;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_2_OFFSET = 10'h 12c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_3_OFFSET = 10'h 130;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_4_OFFSET = 10'h 134;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_5_OFFSET = 10'h 138;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_6_OFFSET = 10'h 13c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_7_OFFSET = 10'h 140;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_8_OFFSET = 10'h 144;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_9_OFFSET = 10'h 148;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_10_OFFSET = 10'h 14c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_11_OFFSET = 10'h 150;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_12_OFFSET = 10'h 154;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_13_OFFSET = 10'h 158;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_14_OFFSET = 10'h 15c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_15_OFFSET = 10'h 160;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_0_OFFSET = 10'h 164;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_1_OFFSET = 10'h 168;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_2_OFFSET = 10'h 16c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_3_OFFSET = 10'h 170;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_4_OFFSET = 10'h 174;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_5_OFFSET = 10'h 178;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_6_OFFSET = 10'h 17c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_7_OFFSET = 10'h 180;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_8_OFFSET = 10'h 184;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_9_OFFSET = 10'h 188;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_10_OFFSET = 10'h 18c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_11_OFFSET = 10'h 190;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_12_OFFSET = 10'h 194;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_13_OFFSET = 10'h 198;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_14_OFFSET = 10'h 19c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_15_OFFSET = 10'h 1a0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_0_OFFSET = 10'h 1a4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_1_OFFSET = 10'h 1a8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_2_OFFSET = 10'h 1ac;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_3_OFFSET = 10'h 1b0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_4_OFFSET = 10'h 1b4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_5_OFFSET = 10'h 1b8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_6_OFFSET = 10'h 1bc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_7_OFFSET = 10'h 1c0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_8_OFFSET = 10'h 1c4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_9_OFFSET = 10'h 1c8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_10_OFFSET = 10'h 1cc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_11_OFFSET = 10'h 1d0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_12_OFFSET = 10'h 1d4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_13_OFFSET = 10'h 1d8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_14_OFFSET = 10'h 1dc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_15_OFFSET = 10'h 1e0;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_0_OFFSET = 10'h 1e4;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_1_OFFSET = 10'h 1e8;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_2_OFFSET = 10'h 1ec;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_3_OFFSET = 10'h 1f0;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_4_OFFSET = 10'h 1f4;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_5_OFFSET = 10'h 1f8;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_6_OFFSET = 10'h 1fc;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_7_OFFSET = 10'h 200;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_8_OFFSET = 10'h 204;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_9_OFFSET = 10'h 208;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_10_OFFSET = 10'h 20c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_11_OFFSET = 10'h 210;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_12_OFFSET = 10'h 214;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_13_OFFSET = 10'h 218;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_14_OFFSET = 10'h 21c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_15_OFFSET = 10'h 220;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_0_OFFSET = 10'h 224;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_1_OFFSET = 10'h 228;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_2_OFFSET = 10'h 22c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_3_OFFSET = 10'h 230;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_4_OFFSET = 10'h 234;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_5_OFFSET = 10'h 238;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_6_OFFSET = 10'h 23c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_7_OFFSET = 10'h 240;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_8_OFFSET = 10'h 244;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_9_OFFSET = 10'h 248;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_10_OFFSET = 10'h 24c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_11_OFFSET = 10'h 250;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_12_OFFSET = 10'h 254;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_13_OFFSET = 10'h 258;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_14_OFFSET = 10'h 25c;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_BUDGET_LEFT_15_OFFSET = 10'h 260;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_0_OFFSET = 10'h 264;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_1_OFFSET = 10'h 268;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_2_OFFSET = 10'h 26c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_3_OFFSET = 10'h 270;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_4_OFFSET = 10'h 274;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_5_OFFSET = 10'h 278;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_6_OFFSET = 10'h 27c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_7_OFFSET = 10'h 280;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_8_OFFSET = 10'h 284;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_9_OFFSET = 10'h 288;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_10_OFFSET = 10'h 28c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_11_OFFSET = 10'h 290;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_12_OFFSET = 10'h 294;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_13_OFFSET = 10'h 298;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_14_OFFSET = 10'h 29c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_BUDGET_LEFT_15_OFFSET = 10'h 2a0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_0_OFFSET = 10'h 2a4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_1_OFFSET = 10'h 2a8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_2_OFFSET = 10'h 2ac;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_3_OFFSET = 10'h 2b0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_4_OFFSET = 10'h 2b4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_5_OFFSET = 10'h 2b8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_6_OFFSET = 10'h 2bc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_7_OFFSET = 10'h 2c0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_8_OFFSET = 10'h 2c4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_9_OFFSET = 10'h 2c8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_10_OFFSET = 10'h 2cc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_11_OFFSET = 10'h 2d0;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_12_OFFSET = 10'h 2d4;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_13_OFFSET = 10'h 2d8;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_14_OFFSET = 10'h 2dc;
  parameter logic [BlockAw-1:0] AXI_RT_WRITE_PERIOD_LEFT_15_OFFSET = 10'h 2e0;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_0_OFFSET = 10'h 2e4;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_1_OFFSET = 10'h 2e8;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_2_OFFSET = 10'h 2ec;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_3_OFFSET = 10'h 2f0;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_4_OFFSET = 10'h 2f4;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_5_OFFSET = 10'h 2f8;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_6_OFFSET = 10'h 2fc;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_7_OFFSET = 10'h 300;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_8_OFFSET = 10'h 304;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_9_OFFSET = 10'h 308;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_10_OFFSET = 10'h 30c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_11_OFFSET = 10'h 310;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_12_OFFSET = 10'h 314;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_13_OFFSET = 10'h 318;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_14_OFFSET = 10'h 31c;
  parameter logic [BlockAw-1:0] AXI_RT_READ_PERIOD_LEFT_15_OFFSET = 10'h 320;
  parameter logic [BlockAw-1:0] AXI_RT_ISOLATE_OFFSET = 10'h 324;
  parameter logic [BlockAw-1:0] AXI_RT_ISOLATED_OFFSET = 10'h 328;
  parameter logic [BlockAw-1:0] AXI_RT_NUM_MANAGERS_OFFSET = 10'h 32c;
  parameter logic [BlockAw-1:0] AXI_RT_ADDR_WIDTH_OFFSET = 10'h 330;
  parameter logic [BlockAw-1:0] AXI_RT_DATA_WIDTH_OFFSET = 10'h 334;
  parameter logic [BlockAw-1:0] AXI_RT_ID_WIDTH_OFFSET = 10'h 338;
  parameter logic [BlockAw-1:0] AXI_RT_USER_WIDTH_OFFSET = 10'h 33c;
  parameter logic [BlockAw-1:0] AXI_RT_NUM_PENDING_OFFSET = 10'h 340;
  parameter logic [BlockAw-1:0] AXI_RT_W_BUFFER_DEPTH_OFFSET = 10'h 344;
  parameter logic [BlockAw-1:0] AXI_RT_NUM_ADDR_REGIONS_OFFSET = 10'h 348;
  parameter logic [BlockAw-1:0] AXI_RT_PERIOD_WIDTH_OFFSET = 10'h 34c;
  parameter logic [BlockAw-1:0] AXI_RT_BUDGET_WIDTH_OFFSET = 10'h 350;
  parameter logic [BlockAw-1:0] AXI_RT_MAX_NUM_MANAGERS_OFFSET = 10'h 354;

  // Reset values for hwext registers and their fields
  parameter logic [7:0] AXI_RT_RT_BYPASSED_RESVAL = 8'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_0_WRITE_BUDGET_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_1_WRITE_BUDGET_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_2_WRITE_BUDGET_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_3_WRITE_BUDGET_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_4_WRITE_BUDGET_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_5_WRITE_BUDGET_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_6_WRITE_BUDGET_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_7_WRITE_BUDGET_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_8_WRITE_BUDGET_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_9_WRITE_BUDGET_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_10_WRITE_BUDGET_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_11_WRITE_BUDGET_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_12_WRITE_BUDGET_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_13_WRITE_BUDGET_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_14_WRITE_BUDGET_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_BUDGET_LEFT_15_WRITE_BUDGET_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_0_READ_BUDGET_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_1_READ_BUDGET_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_2_READ_BUDGET_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_3_READ_BUDGET_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_4_READ_BUDGET_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_5_READ_BUDGET_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_6_READ_BUDGET_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_7_READ_BUDGET_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_8_READ_BUDGET_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_9_READ_BUDGET_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_10_READ_BUDGET_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_11_READ_BUDGET_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_12_READ_BUDGET_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_13_READ_BUDGET_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_14_READ_BUDGET_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_BUDGET_LEFT_15_READ_BUDGET_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_0_WRITE_PERIOD_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_1_WRITE_PERIOD_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_2_WRITE_PERIOD_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_3_WRITE_PERIOD_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_4_WRITE_PERIOD_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_5_WRITE_PERIOD_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_6_WRITE_PERIOD_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_7_WRITE_PERIOD_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_8_WRITE_PERIOD_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_9_WRITE_PERIOD_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_10_WRITE_PERIOD_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_11_WRITE_PERIOD_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_12_WRITE_PERIOD_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_13_WRITE_PERIOD_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_14_WRITE_PERIOD_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_WRITE_PERIOD_LEFT_15_WRITE_PERIOD_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_0_READ_PERIOD_LEFT_0_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_1_READ_PERIOD_LEFT_1_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_2_READ_PERIOD_LEFT_2_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_3_READ_PERIOD_LEFT_3_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_4_READ_PERIOD_LEFT_4_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_5_READ_PERIOD_LEFT_5_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_6_READ_PERIOD_LEFT_6_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_7_READ_PERIOD_LEFT_7_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_8_READ_PERIOD_LEFT_8_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_9_READ_PERIOD_LEFT_9_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_10_READ_PERIOD_LEFT_10_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_11_READ_PERIOD_LEFT_11_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_12_READ_PERIOD_LEFT_12_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_13_READ_PERIOD_LEFT_13_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_14_READ_PERIOD_LEFT_14_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_15_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_READ_PERIOD_LEFT_15_READ_PERIOD_LEFT_15_RESVAL = 32'h 0;
  parameter logic [7:0] AXI_RT_ISOLATE_RESVAL = 8'h 0;
  parameter logic [7:0] AXI_RT_ISOLATED_RESVAL = 8'h 0;
  parameter logic [31:0] AXI_RT_NUM_MANAGERS_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_ADDR_WIDTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_DATA_WIDTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_ID_WIDTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_USER_WIDTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_NUM_PENDING_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_W_BUFFER_DEPTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_NUM_ADDR_REGIONS_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_PERIOD_WIDTH_RESVAL = 32'h 0;
  parameter logic [31:0] AXI_RT_BUDGET_WIDTH_RESVAL = 32'h 0;

  // Register index
  typedef enum int {
    AXI_RT_MAJOR_VERSION,
    AXI_RT_MINOR_VERSION,
    AXI_RT_PATCH_VERSION,
    AXI_RT_RT_ENABLE,
    AXI_RT_RT_BYPASSED,
    AXI_RT_LEN_LIMIT_0,
    AXI_RT_LEN_LIMIT_1,
    AXI_RT_IMTU_ENABLE,
    AXI_RT_IMTU_ABORT,
    AXI_RT_START_ADDR_SUB_LOW_0,
    AXI_RT_START_ADDR_SUB_LOW_1,
    AXI_RT_START_ADDR_SUB_LOW_2,
    AXI_RT_START_ADDR_SUB_LOW_3,
    AXI_RT_START_ADDR_SUB_LOW_4,
    AXI_RT_START_ADDR_SUB_LOW_5,
    AXI_RT_START_ADDR_SUB_LOW_6,
    AXI_RT_START_ADDR_SUB_LOW_7,
    AXI_RT_START_ADDR_SUB_LOW_8,
    AXI_RT_START_ADDR_SUB_LOW_9,
    AXI_RT_START_ADDR_SUB_LOW_10,
    AXI_RT_START_ADDR_SUB_LOW_11,
    AXI_RT_START_ADDR_SUB_LOW_12,
    AXI_RT_START_ADDR_SUB_LOW_13,
    AXI_RT_START_ADDR_SUB_LOW_14,
    AXI_RT_START_ADDR_SUB_LOW_15,
    AXI_RT_START_ADDR_SUB_HIGH_0,
    AXI_RT_START_ADDR_SUB_HIGH_1,
    AXI_RT_START_ADDR_SUB_HIGH_2,
    AXI_RT_START_ADDR_SUB_HIGH_3,
    AXI_RT_START_ADDR_SUB_HIGH_4,
    AXI_RT_START_ADDR_SUB_HIGH_5,
    AXI_RT_START_ADDR_SUB_HIGH_6,
    AXI_RT_START_ADDR_SUB_HIGH_7,
    AXI_RT_START_ADDR_SUB_HIGH_8,
    AXI_RT_START_ADDR_SUB_HIGH_9,
    AXI_RT_START_ADDR_SUB_HIGH_10,
    AXI_RT_START_ADDR_SUB_HIGH_11,
    AXI_RT_START_ADDR_SUB_HIGH_12,
    AXI_RT_START_ADDR_SUB_HIGH_13,
    AXI_RT_START_ADDR_SUB_HIGH_14,
    AXI_RT_START_ADDR_SUB_HIGH_15,
    AXI_RT_END_ADDR_SUB_LOW_0,
    AXI_RT_END_ADDR_SUB_LOW_1,
    AXI_RT_END_ADDR_SUB_LOW_2,
    AXI_RT_END_ADDR_SUB_LOW_3,
    AXI_RT_END_ADDR_SUB_LOW_4,
    AXI_RT_END_ADDR_SUB_LOW_5,
    AXI_RT_END_ADDR_SUB_LOW_6,
    AXI_RT_END_ADDR_SUB_LOW_7,
    AXI_RT_END_ADDR_SUB_LOW_8,
    AXI_RT_END_ADDR_SUB_LOW_9,
    AXI_RT_END_ADDR_SUB_LOW_10,
    AXI_RT_END_ADDR_SUB_LOW_11,
    AXI_RT_END_ADDR_SUB_LOW_12,
    AXI_RT_END_ADDR_SUB_LOW_13,
    AXI_RT_END_ADDR_SUB_LOW_14,
    AXI_RT_END_ADDR_SUB_LOW_15,
    AXI_RT_END_ADDR_SUB_HIGH_0,
    AXI_RT_END_ADDR_SUB_HIGH_1,
    AXI_RT_END_ADDR_SUB_HIGH_2,
    AXI_RT_END_ADDR_SUB_HIGH_3,
    AXI_RT_END_ADDR_SUB_HIGH_4,
    AXI_RT_END_ADDR_SUB_HIGH_5,
    AXI_RT_END_ADDR_SUB_HIGH_6,
    AXI_RT_END_ADDR_SUB_HIGH_7,
    AXI_RT_END_ADDR_SUB_HIGH_8,
    AXI_RT_END_ADDR_SUB_HIGH_9,
    AXI_RT_END_ADDR_SUB_HIGH_10,
    AXI_RT_END_ADDR_SUB_HIGH_11,
    AXI_RT_END_ADDR_SUB_HIGH_12,
    AXI_RT_END_ADDR_SUB_HIGH_13,
    AXI_RT_END_ADDR_SUB_HIGH_14,
    AXI_RT_END_ADDR_SUB_HIGH_15,
    AXI_RT_WRITE_BUDGET_0,
    AXI_RT_WRITE_BUDGET_1,
    AXI_RT_WRITE_BUDGET_2,
    AXI_RT_WRITE_BUDGET_3,
    AXI_RT_WRITE_BUDGET_4,
    AXI_RT_WRITE_BUDGET_5,
    AXI_RT_WRITE_BUDGET_6,
    AXI_RT_WRITE_BUDGET_7,
    AXI_RT_WRITE_BUDGET_8,
    AXI_RT_WRITE_BUDGET_9,
    AXI_RT_WRITE_BUDGET_10,
    AXI_RT_WRITE_BUDGET_11,
    AXI_RT_WRITE_BUDGET_12,
    AXI_RT_WRITE_BUDGET_13,
    AXI_RT_WRITE_BUDGET_14,
    AXI_RT_WRITE_BUDGET_15,
    AXI_RT_READ_BUDGET_0,
    AXI_RT_READ_BUDGET_1,
    AXI_RT_READ_BUDGET_2,
    AXI_RT_READ_BUDGET_3,
    AXI_RT_READ_BUDGET_4,
    AXI_RT_READ_BUDGET_5,
    AXI_RT_READ_BUDGET_6,
    AXI_RT_READ_BUDGET_7,
    AXI_RT_READ_BUDGET_8,
    AXI_RT_READ_BUDGET_9,
    AXI_RT_READ_BUDGET_10,
    AXI_RT_READ_BUDGET_11,
    AXI_RT_READ_BUDGET_12,
    AXI_RT_READ_BUDGET_13,
    AXI_RT_READ_BUDGET_14,
    AXI_RT_READ_BUDGET_15,
    AXI_RT_WRITE_PERIOD_0,
    AXI_RT_WRITE_PERIOD_1,
    AXI_RT_WRITE_PERIOD_2,
    AXI_RT_WRITE_PERIOD_3,
    AXI_RT_WRITE_PERIOD_4,
    AXI_RT_WRITE_PERIOD_5,
    AXI_RT_WRITE_PERIOD_6,
    AXI_RT_WRITE_PERIOD_7,
    AXI_RT_WRITE_PERIOD_8,
    AXI_RT_WRITE_PERIOD_9,
    AXI_RT_WRITE_PERIOD_10,
    AXI_RT_WRITE_PERIOD_11,
    AXI_RT_WRITE_PERIOD_12,
    AXI_RT_WRITE_PERIOD_13,
    AXI_RT_WRITE_PERIOD_14,
    AXI_RT_WRITE_PERIOD_15,
    AXI_RT_READ_PERIOD_0,
    AXI_RT_READ_PERIOD_1,
    AXI_RT_READ_PERIOD_2,
    AXI_RT_READ_PERIOD_3,
    AXI_RT_READ_PERIOD_4,
    AXI_RT_READ_PERIOD_5,
    AXI_RT_READ_PERIOD_6,
    AXI_RT_READ_PERIOD_7,
    AXI_RT_READ_PERIOD_8,
    AXI_RT_READ_PERIOD_9,
    AXI_RT_READ_PERIOD_10,
    AXI_RT_READ_PERIOD_11,
    AXI_RT_READ_PERIOD_12,
    AXI_RT_READ_PERIOD_13,
    AXI_RT_READ_PERIOD_14,
    AXI_RT_READ_PERIOD_15,
    AXI_RT_WRITE_BUDGET_LEFT_0,
    AXI_RT_WRITE_BUDGET_LEFT_1,
    AXI_RT_WRITE_BUDGET_LEFT_2,
    AXI_RT_WRITE_BUDGET_LEFT_3,
    AXI_RT_WRITE_BUDGET_LEFT_4,
    AXI_RT_WRITE_BUDGET_LEFT_5,
    AXI_RT_WRITE_BUDGET_LEFT_6,
    AXI_RT_WRITE_BUDGET_LEFT_7,
    AXI_RT_WRITE_BUDGET_LEFT_8,
    AXI_RT_WRITE_BUDGET_LEFT_9,
    AXI_RT_WRITE_BUDGET_LEFT_10,
    AXI_RT_WRITE_BUDGET_LEFT_11,
    AXI_RT_WRITE_BUDGET_LEFT_12,
    AXI_RT_WRITE_BUDGET_LEFT_13,
    AXI_RT_WRITE_BUDGET_LEFT_14,
    AXI_RT_WRITE_BUDGET_LEFT_15,
    AXI_RT_READ_BUDGET_LEFT_0,
    AXI_RT_READ_BUDGET_LEFT_1,
    AXI_RT_READ_BUDGET_LEFT_2,
    AXI_RT_READ_BUDGET_LEFT_3,
    AXI_RT_READ_BUDGET_LEFT_4,
    AXI_RT_READ_BUDGET_LEFT_5,
    AXI_RT_READ_BUDGET_LEFT_6,
    AXI_RT_READ_BUDGET_LEFT_7,
    AXI_RT_READ_BUDGET_LEFT_8,
    AXI_RT_READ_BUDGET_LEFT_9,
    AXI_RT_READ_BUDGET_LEFT_10,
    AXI_RT_READ_BUDGET_LEFT_11,
    AXI_RT_READ_BUDGET_LEFT_12,
    AXI_RT_READ_BUDGET_LEFT_13,
    AXI_RT_READ_BUDGET_LEFT_14,
    AXI_RT_READ_BUDGET_LEFT_15,
    AXI_RT_WRITE_PERIOD_LEFT_0,
    AXI_RT_WRITE_PERIOD_LEFT_1,
    AXI_RT_WRITE_PERIOD_LEFT_2,
    AXI_RT_WRITE_PERIOD_LEFT_3,
    AXI_RT_WRITE_PERIOD_LEFT_4,
    AXI_RT_WRITE_PERIOD_LEFT_5,
    AXI_RT_WRITE_PERIOD_LEFT_6,
    AXI_RT_WRITE_PERIOD_LEFT_7,
    AXI_RT_WRITE_PERIOD_LEFT_8,
    AXI_RT_WRITE_PERIOD_LEFT_9,
    AXI_RT_WRITE_PERIOD_LEFT_10,
    AXI_RT_WRITE_PERIOD_LEFT_11,
    AXI_RT_WRITE_PERIOD_LEFT_12,
    AXI_RT_WRITE_PERIOD_LEFT_13,
    AXI_RT_WRITE_PERIOD_LEFT_14,
    AXI_RT_WRITE_PERIOD_LEFT_15,
    AXI_RT_READ_PERIOD_LEFT_0,
    AXI_RT_READ_PERIOD_LEFT_1,
    AXI_RT_READ_PERIOD_LEFT_2,
    AXI_RT_READ_PERIOD_LEFT_3,
    AXI_RT_READ_PERIOD_LEFT_4,
    AXI_RT_READ_PERIOD_LEFT_5,
    AXI_RT_READ_PERIOD_LEFT_6,
    AXI_RT_READ_PERIOD_LEFT_7,
    AXI_RT_READ_PERIOD_LEFT_8,
    AXI_RT_READ_PERIOD_LEFT_9,
    AXI_RT_READ_PERIOD_LEFT_10,
    AXI_RT_READ_PERIOD_LEFT_11,
    AXI_RT_READ_PERIOD_LEFT_12,
    AXI_RT_READ_PERIOD_LEFT_13,
    AXI_RT_READ_PERIOD_LEFT_14,
    AXI_RT_READ_PERIOD_LEFT_15,
    AXI_RT_ISOLATE,
    AXI_RT_ISOLATED,
    AXI_RT_NUM_MANAGERS,
    AXI_RT_ADDR_WIDTH,
    AXI_RT_DATA_WIDTH,
    AXI_RT_ID_WIDTH,
    AXI_RT_USER_WIDTH,
    AXI_RT_NUM_PENDING,
    AXI_RT_W_BUFFER_DEPTH,
    AXI_RT_NUM_ADDR_REGIONS,
    AXI_RT_PERIOD_WIDTH,
    AXI_RT_BUDGET_WIDTH,
    AXI_RT_MAX_NUM_MANAGERS
  } axi_rt_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] AXI_RT_PERMIT [214] = '{
    4'b 1111, // index[  0] AXI_RT_MAJOR_VERSION
    4'b 1111, // index[  1] AXI_RT_MINOR_VERSION
    4'b 1111, // index[  2] AXI_RT_PATCH_VERSION
    4'b 0001, // index[  3] AXI_RT_RT_ENABLE
    4'b 0001, // index[  4] AXI_RT_RT_BYPASSED
    4'b 1111, // index[  5] AXI_RT_LEN_LIMIT_0
    4'b 1111, // index[  6] AXI_RT_LEN_LIMIT_1
    4'b 0001, // index[  7] AXI_RT_IMTU_ENABLE
    4'b 0001, // index[  8] AXI_RT_IMTU_ABORT
    4'b 1111, // index[  9] AXI_RT_START_ADDR_SUB_LOW_0
    4'b 1111, // index[ 10] AXI_RT_START_ADDR_SUB_LOW_1
    4'b 1111, // index[ 11] AXI_RT_START_ADDR_SUB_LOW_2
    4'b 1111, // index[ 12] AXI_RT_START_ADDR_SUB_LOW_3
    4'b 1111, // index[ 13] AXI_RT_START_ADDR_SUB_LOW_4
    4'b 1111, // index[ 14] AXI_RT_START_ADDR_SUB_LOW_5
    4'b 1111, // index[ 15] AXI_RT_START_ADDR_SUB_LOW_6
    4'b 1111, // index[ 16] AXI_RT_START_ADDR_SUB_LOW_7
    4'b 1111, // index[ 17] AXI_RT_START_ADDR_SUB_LOW_8
    4'b 1111, // index[ 18] AXI_RT_START_ADDR_SUB_LOW_9
    4'b 1111, // index[ 19] AXI_RT_START_ADDR_SUB_LOW_10
    4'b 1111, // index[ 20] AXI_RT_START_ADDR_SUB_LOW_11
    4'b 1111, // index[ 21] AXI_RT_START_ADDR_SUB_LOW_12
    4'b 1111, // index[ 22] AXI_RT_START_ADDR_SUB_LOW_13
    4'b 1111, // index[ 23] AXI_RT_START_ADDR_SUB_LOW_14
    4'b 1111, // index[ 24] AXI_RT_START_ADDR_SUB_LOW_15
    4'b 1111, // index[ 25] AXI_RT_START_ADDR_SUB_HIGH_0
    4'b 1111, // index[ 26] AXI_RT_START_ADDR_SUB_HIGH_1
    4'b 1111, // index[ 27] AXI_RT_START_ADDR_SUB_HIGH_2
    4'b 1111, // index[ 28] AXI_RT_START_ADDR_SUB_HIGH_3
    4'b 1111, // index[ 29] AXI_RT_START_ADDR_SUB_HIGH_4
    4'b 1111, // index[ 30] AXI_RT_START_ADDR_SUB_HIGH_5
    4'b 1111, // index[ 31] AXI_RT_START_ADDR_SUB_HIGH_6
    4'b 1111, // index[ 32] AXI_RT_START_ADDR_SUB_HIGH_7
    4'b 1111, // index[ 33] AXI_RT_START_ADDR_SUB_HIGH_8
    4'b 1111, // index[ 34] AXI_RT_START_ADDR_SUB_HIGH_9
    4'b 1111, // index[ 35] AXI_RT_START_ADDR_SUB_HIGH_10
    4'b 1111, // index[ 36] AXI_RT_START_ADDR_SUB_HIGH_11
    4'b 1111, // index[ 37] AXI_RT_START_ADDR_SUB_HIGH_12
    4'b 1111, // index[ 38] AXI_RT_START_ADDR_SUB_HIGH_13
    4'b 1111, // index[ 39] AXI_RT_START_ADDR_SUB_HIGH_14
    4'b 1111, // index[ 40] AXI_RT_START_ADDR_SUB_HIGH_15
    4'b 1111, // index[ 41] AXI_RT_END_ADDR_SUB_LOW_0
    4'b 1111, // index[ 42] AXI_RT_END_ADDR_SUB_LOW_1
    4'b 1111, // index[ 43] AXI_RT_END_ADDR_SUB_LOW_2
    4'b 1111, // index[ 44] AXI_RT_END_ADDR_SUB_LOW_3
    4'b 1111, // index[ 45] AXI_RT_END_ADDR_SUB_LOW_4
    4'b 1111, // index[ 46] AXI_RT_END_ADDR_SUB_LOW_5
    4'b 1111, // index[ 47] AXI_RT_END_ADDR_SUB_LOW_6
    4'b 1111, // index[ 48] AXI_RT_END_ADDR_SUB_LOW_7
    4'b 1111, // index[ 49] AXI_RT_END_ADDR_SUB_LOW_8
    4'b 1111, // index[ 50] AXI_RT_END_ADDR_SUB_LOW_9
    4'b 1111, // index[ 51] AXI_RT_END_ADDR_SUB_LOW_10
    4'b 1111, // index[ 52] AXI_RT_END_ADDR_SUB_LOW_11
    4'b 1111, // index[ 53] AXI_RT_END_ADDR_SUB_LOW_12
    4'b 1111, // index[ 54] AXI_RT_END_ADDR_SUB_LOW_13
    4'b 1111, // index[ 55] AXI_RT_END_ADDR_SUB_LOW_14
    4'b 1111, // index[ 56] AXI_RT_END_ADDR_SUB_LOW_15
    4'b 1111, // index[ 57] AXI_RT_END_ADDR_SUB_HIGH_0
    4'b 1111, // index[ 58] AXI_RT_END_ADDR_SUB_HIGH_1
    4'b 1111, // index[ 59] AXI_RT_END_ADDR_SUB_HIGH_2
    4'b 1111, // index[ 60] AXI_RT_END_ADDR_SUB_HIGH_3
    4'b 1111, // index[ 61] AXI_RT_END_ADDR_SUB_HIGH_4
    4'b 1111, // index[ 62] AXI_RT_END_ADDR_SUB_HIGH_5
    4'b 1111, // index[ 63] AXI_RT_END_ADDR_SUB_HIGH_6
    4'b 1111, // index[ 64] AXI_RT_END_ADDR_SUB_HIGH_7
    4'b 1111, // index[ 65] AXI_RT_END_ADDR_SUB_HIGH_8
    4'b 1111, // index[ 66] AXI_RT_END_ADDR_SUB_HIGH_9
    4'b 1111, // index[ 67] AXI_RT_END_ADDR_SUB_HIGH_10
    4'b 1111, // index[ 68] AXI_RT_END_ADDR_SUB_HIGH_11
    4'b 1111, // index[ 69] AXI_RT_END_ADDR_SUB_HIGH_12
    4'b 1111, // index[ 70] AXI_RT_END_ADDR_SUB_HIGH_13
    4'b 1111, // index[ 71] AXI_RT_END_ADDR_SUB_HIGH_14
    4'b 1111, // index[ 72] AXI_RT_END_ADDR_SUB_HIGH_15
    4'b 1111, // index[ 73] AXI_RT_WRITE_BUDGET_0
    4'b 1111, // index[ 74] AXI_RT_WRITE_BUDGET_1
    4'b 1111, // index[ 75] AXI_RT_WRITE_BUDGET_2
    4'b 1111, // index[ 76] AXI_RT_WRITE_BUDGET_3
    4'b 1111, // index[ 77] AXI_RT_WRITE_BUDGET_4
    4'b 1111, // index[ 78] AXI_RT_WRITE_BUDGET_5
    4'b 1111, // index[ 79] AXI_RT_WRITE_BUDGET_6
    4'b 1111, // index[ 80] AXI_RT_WRITE_BUDGET_7
    4'b 1111, // index[ 81] AXI_RT_WRITE_BUDGET_8
    4'b 1111, // index[ 82] AXI_RT_WRITE_BUDGET_9
    4'b 1111, // index[ 83] AXI_RT_WRITE_BUDGET_10
    4'b 1111, // index[ 84] AXI_RT_WRITE_BUDGET_11
    4'b 1111, // index[ 85] AXI_RT_WRITE_BUDGET_12
    4'b 1111, // index[ 86] AXI_RT_WRITE_BUDGET_13
    4'b 1111, // index[ 87] AXI_RT_WRITE_BUDGET_14
    4'b 1111, // index[ 88] AXI_RT_WRITE_BUDGET_15
    4'b 1111, // index[ 89] AXI_RT_READ_BUDGET_0
    4'b 1111, // index[ 90] AXI_RT_READ_BUDGET_1
    4'b 1111, // index[ 91] AXI_RT_READ_BUDGET_2
    4'b 1111, // index[ 92] AXI_RT_READ_BUDGET_3
    4'b 1111, // index[ 93] AXI_RT_READ_BUDGET_4
    4'b 1111, // index[ 94] AXI_RT_READ_BUDGET_5
    4'b 1111, // index[ 95] AXI_RT_READ_BUDGET_6
    4'b 1111, // index[ 96] AXI_RT_READ_BUDGET_7
    4'b 1111, // index[ 97] AXI_RT_READ_BUDGET_8
    4'b 1111, // index[ 98] AXI_RT_READ_BUDGET_9
    4'b 1111, // index[ 99] AXI_RT_READ_BUDGET_10
    4'b 1111, // index[100] AXI_RT_READ_BUDGET_11
    4'b 1111, // index[101] AXI_RT_READ_BUDGET_12
    4'b 1111, // index[102] AXI_RT_READ_BUDGET_13
    4'b 1111, // index[103] AXI_RT_READ_BUDGET_14
    4'b 1111, // index[104] AXI_RT_READ_BUDGET_15
    4'b 1111, // index[105] AXI_RT_WRITE_PERIOD_0
    4'b 1111, // index[106] AXI_RT_WRITE_PERIOD_1
    4'b 1111, // index[107] AXI_RT_WRITE_PERIOD_2
    4'b 1111, // index[108] AXI_RT_WRITE_PERIOD_3
    4'b 1111, // index[109] AXI_RT_WRITE_PERIOD_4
    4'b 1111, // index[110] AXI_RT_WRITE_PERIOD_5
    4'b 1111, // index[111] AXI_RT_WRITE_PERIOD_6
    4'b 1111, // index[112] AXI_RT_WRITE_PERIOD_7
    4'b 1111, // index[113] AXI_RT_WRITE_PERIOD_8
    4'b 1111, // index[114] AXI_RT_WRITE_PERIOD_9
    4'b 1111, // index[115] AXI_RT_WRITE_PERIOD_10
    4'b 1111, // index[116] AXI_RT_WRITE_PERIOD_11
    4'b 1111, // index[117] AXI_RT_WRITE_PERIOD_12
    4'b 1111, // index[118] AXI_RT_WRITE_PERIOD_13
    4'b 1111, // index[119] AXI_RT_WRITE_PERIOD_14
    4'b 1111, // index[120] AXI_RT_WRITE_PERIOD_15
    4'b 1111, // index[121] AXI_RT_READ_PERIOD_0
    4'b 1111, // index[122] AXI_RT_READ_PERIOD_1
    4'b 1111, // index[123] AXI_RT_READ_PERIOD_2
    4'b 1111, // index[124] AXI_RT_READ_PERIOD_3
    4'b 1111, // index[125] AXI_RT_READ_PERIOD_4
    4'b 1111, // index[126] AXI_RT_READ_PERIOD_5
    4'b 1111, // index[127] AXI_RT_READ_PERIOD_6
    4'b 1111, // index[128] AXI_RT_READ_PERIOD_7
    4'b 1111, // index[129] AXI_RT_READ_PERIOD_8
    4'b 1111, // index[130] AXI_RT_READ_PERIOD_9
    4'b 1111, // index[131] AXI_RT_READ_PERIOD_10
    4'b 1111, // index[132] AXI_RT_READ_PERIOD_11
    4'b 1111, // index[133] AXI_RT_READ_PERIOD_12
    4'b 1111, // index[134] AXI_RT_READ_PERIOD_13
    4'b 1111, // index[135] AXI_RT_READ_PERIOD_14
    4'b 1111, // index[136] AXI_RT_READ_PERIOD_15
    4'b 1111, // index[137] AXI_RT_WRITE_BUDGET_LEFT_0
    4'b 1111, // index[138] AXI_RT_WRITE_BUDGET_LEFT_1
    4'b 1111, // index[139] AXI_RT_WRITE_BUDGET_LEFT_2
    4'b 1111, // index[140] AXI_RT_WRITE_BUDGET_LEFT_3
    4'b 1111, // index[141] AXI_RT_WRITE_BUDGET_LEFT_4
    4'b 1111, // index[142] AXI_RT_WRITE_BUDGET_LEFT_5
    4'b 1111, // index[143] AXI_RT_WRITE_BUDGET_LEFT_6
    4'b 1111, // index[144] AXI_RT_WRITE_BUDGET_LEFT_7
    4'b 1111, // index[145] AXI_RT_WRITE_BUDGET_LEFT_8
    4'b 1111, // index[146] AXI_RT_WRITE_BUDGET_LEFT_9
    4'b 1111, // index[147] AXI_RT_WRITE_BUDGET_LEFT_10
    4'b 1111, // index[148] AXI_RT_WRITE_BUDGET_LEFT_11
    4'b 1111, // index[149] AXI_RT_WRITE_BUDGET_LEFT_12
    4'b 1111, // index[150] AXI_RT_WRITE_BUDGET_LEFT_13
    4'b 1111, // index[151] AXI_RT_WRITE_BUDGET_LEFT_14
    4'b 1111, // index[152] AXI_RT_WRITE_BUDGET_LEFT_15
    4'b 1111, // index[153] AXI_RT_READ_BUDGET_LEFT_0
    4'b 1111, // index[154] AXI_RT_READ_BUDGET_LEFT_1
    4'b 1111, // index[155] AXI_RT_READ_BUDGET_LEFT_2
    4'b 1111, // index[156] AXI_RT_READ_BUDGET_LEFT_3
    4'b 1111, // index[157] AXI_RT_READ_BUDGET_LEFT_4
    4'b 1111, // index[158] AXI_RT_READ_BUDGET_LEFT_5
    4'b 1111, // index[159] AXI_RT_READ_BUDGET_LEFT_6
    4'b 1111, // index[160] AXI_RT_READ_BUDGET_LEFT_7
    4'b 1111, // index[161] AXI_RT_READ_BUDGET_LEFT_8
    4'b 1111, // index[162] AXI_RT_READ_BUDGET_LEFT_9
    4'b 1111, // index[163] AXI_RT_READ_BUDGET_LEFT_10
    4'b 1111, // index[164] AXI_RT_READ_BUDGET_LEFT_11
    4'b 1111, // index[165] AXI_RT_READ_BUDGET_LEFT_12
    4'b 1111, // index[166] AXI_RT_READ_BUDGET_LEFT_13
    4'b 1111, // index[167] AXI_RT_READ_BUDGET_LEFT_14
    4'b 1111, // index[168] AXI_RT_READ_BUDGET_LEFT_15
    4'b 1111, // index[169] AXI_RT_WRITE_PERIOD_LEFT_0
    4'b 1111, // index[170] AXI_RT_WRITE_PERIOD_LEFT_1
    4'b 1111, // index[171] AXI_RT_WRITE_PERIOD_LEFT_2
    4'b 1111, // index[172] AXI_RT_WRITE_PERIOD_LEFT_3
    4'b 1111, // index[173] AXI_RT_WRITE_PERIOD_LEFT_4
    4'b 1111, // index[174] AXI_RT_WRITE_PERIOD_LEFT_5
    4'b 1111, // index[175] AXI_RT_WRITE_PERIOD_LEFT_6
    4'b 1111, // index[176] AXI_RT_WRITE_PERIOD_LEFT_7
    4'b 1111, // index[177] AXI_RT_WRITE_PERIOD_LEFT_8
    4'b 1111, // index[178] AXI_RT_WRITE_PERIOD_LEFT_9
    4'b 1111, // index[179] AXI_RT_WRITE_PERIOD_LEFT_10
    4'b 1111, // index[180] AXI_RT_WRITE_PERIOD_LEFT_11
    4'b 1111, // index[181] AXI_RT_WRITE_PERIOD_LEFT_12
    4'b 1111, // index[182] AXI_RT_WRITE_PERIOD_LEFT_13
    4'b 1111, // index[183] AXI_RT_WRITE_PERIOD_LEFT_14
    4'b 1111, // index[184] AXI_RT_WRITE_PERIOD_LEFT_15
    4'b 1111, // index[185] AXI_RT_READ_PERIOD_LEFT_0
    4'b 1111, // index[186] AXI_RT_READ_PERIOD_LEFT_1
    4'b 1111, // index[187] AXI_RT_READ_PERIOD_LEFT_2
    4'b 1111, // index[188] AXI_RT_READ_PERIOD_LEFT_3
    4'b 1111, // index[189] AXI_RT_READ_PERIOD_LEFT_4
    4'b 1111, // index[190] AXI_RT_READ_PERIOD_LEFT_5
    4'b 1111, // index[191] AXI_RT_READ_PERIOD_LEFT_6
    4'b 1111, // index[192] AXI_RT_READ_PERIOD_LEFT_7
    4'b 1111, // index[193] AXI_RT_READ_PERIOD_LEFT_8
    4'b 1111, // index[194] AXI_RT_READ_PERIOD_LEFT_9
    4'b 1111, // index[195] AXI_RT_READ_PERIOD_LEFT_10
    4'b 1111, // index[196] AXI_RT_READ_PERIOD_LEFT_11
    4'b 1111, // index[197] AXI_RT_READ_PERIOD_LEFT_12
    4'b 1111, // index[198] AXI_RT_READ_PERIOD_LEFT_13
    4'b 1111, // index[199] AXI_RT_READ_PERIOD_LEFT_14
    4'b 1111, // index[200] AXI_RT_READ_PERIOD_LEFT_15
    4'b 0001, // index[201] AXI_RT_ISOLATE
    4'b 0001, // index[202] AXI_RT_ISOLATED
    4'b 1111, // index[203] AXI_RT_NUM_MANAGERS
    4'b 1111, // index[204] AXI_RT_ADDR_WIDTH
    4'b 1111, // index[205] AXI_RT_DATA_WIDTH
    4'b 1111, // index[206] AXI_RT_ID_WIDTH
    4'b 1111, // index[207] AXI_RT_USER_WIDTH
    4'b 1111, // index[208] AXI_RT_NUM_PENDING
    4'b 1111, // index[209] AXI_RT_W_BUFFER_DEPTH
    4'b 1111, // index[210] AXI_RT_NUM_ADDR_REGIONS
    4'b 1111, // index[211] AXI_RT_PERIOD_WIDTH
    4'b 1111, // index[212] AXI_RT_BUDGET_WIDTH
    4'b 1111  // index[213] AXI_RT_MAX_NUM_MANAGERS
  };

endpackage

